apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mongodb
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 7.10.12
    chart: mongodb
    helm:
      values: |
        usePassword: false
        replicaSet:
          enabled: true
        updateStrategy:
          type: RollingUpdate
        # mongodbUsername: tensorleap
        # mongodbPassword: tensorleap
        # mongodbDatabase: tensorleap
        # existingSecret: infra-dev-secrets
        metrics:
          enabled: true
          livenessProbe:
            enabled: true
          readinessProbe:
            enabled: true
          serviceMonitor:
            ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
            enabled: false
            ## Specify a namespace if needed
            # namespace: monitoring
            ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
            additionalLabels:
              release: prometheus-operator
            ## Specify Metric Relabellings to add to the scrape endpoint
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
            # relabellings:
            alerting:
              ## Define individual alerting rules as required
              ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup
              ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
              rules: {}
              ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Prometheus Rules to work with
              ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
              additionalLabels: {}
        nodeSelector:
          cloud.google.com/gke-nodepool: default-pool
  destination:
    server: "https://kubernetes.default.svc"
    namespace: dev-data
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
